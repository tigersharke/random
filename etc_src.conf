## src.conf
#########################################################################################################
#													#
#  There are a number of things you can do to reduce the size and number of files in /boot/kernel	#
#													#
#  Possibly the best space saving is to be had by setting WITHOUT_KERNEL_SYMBOLS in /etc/src.conf	#
#  (if this file doesn't already exist, just create it), and the next time you installkernel, the	#
#  debug symbol files won't be installed. It's safe to delete them now, if you need the space	#
#  immediately (rm /boot/kernel/*.symbols)								#
#													#
#  There are a few make.conf settings that control what modules are built:				#
#													#
#	NO_MODULES - disable building of modules completely						#
#	MODULES_OVERRIDE - specify the modules you want to build					#
#	WITHOUT_MODULES - list of modules that should not be built					#
#													#
#  The NO_MODULES option is probably a bit too heavy-handed, so a judicious combination of the		#
#  other two is a better choice. If you know exactly which modules you want, you can simply set		#
#  them in MODULES_OVERRIDE. Note that WITHOUT_MODULES is evaluated after MODULES_OVERRIDE, so		#
#  any module named in both lists will not be built.							#
#													#
#  If you really want to suppress building of all modules, you can use NO_MODULES, and ensure		#
#  that all required drivers and modules are statically compiled into the kernel. Each driver's		#
#  manpage shows the appropriate lines to add to your kernel config file, so you should be able		#
#  to figure out what you need.										#
#													#
#########################################################################################################

#   /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
#   |  The values of variables are ignored regardless of their setting; even if  |
#   |  they would be set to ``FALSE'' or ``NO''. The presence of an option       |
#   |  causes it to be honored by make(1).                                       |
#   \____________________________________________________________________________/


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#  TOP_TABLE_SIZE											#
#   (int) top(1) uses a hash table for the user names. The size of this hash can be tuned to match the	#
#   number of local users.  The table size should be a prime number approximately twice as large as 	#
#   the number of lines in /etc/passwd.  The default number is 20011.					#
#_______________________________________________________________________________________________________#
TOP_TABLE_SIZE=191     # 60 + 1 lines * 3 -> nearest prime

#*******************************************************************************************************#
# PORTS_MODULES     # Set this to the list of ports you wish to rebuild every time the kernel is built.	#
#*******************************************************************************************************#
#PORTS_MODULES= emulators/virtualbox-ose-kmod

#===============================#   #
#  Add features   		#  ###
#===============================#   #

WITH_BSD_GREP=
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#  WITH_CCACHE_BUILD											#
#  Set to use ccache(1) for the build.  No configuration is required except to install the devel/ccache	#
#  package.  When using with distcc(1), set CCACHE_PREFIX=/usr/local/bin/distcc.  The default		#
#  cache directory of $HOME/.ccache will be used, which can be overridden by setting CCACHE_DIR.  The	#
#  CCACHE_COMPILERCHECK option defaults to content when using the in-tree bootstrap compiler, and mtime	#
#  when using an external compiler.  The CCACHE_CPP2 option is used for Clang but not GCC.		#
#													#
#  Sharing a cache between multiple work directories requires using a layout				#
#  similar to /some/prefix/src /some/prefix/obj and an environment such as:				#
#  CCACHE_BASEDIR='${SRCTOP:H}' MAKEOBJDIRPREFIX='${SRCTOP:H}/obj'					#
#_______________________________________________________________________________________________________#
WITH_CCACHE_BUILD=
WITH_CTF=			# Set to compile with CTF (Compact C Type Format) data.
WITH_LOADER_LUA=
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# FreeBSD 13.x has many debugging features turned on, in both the kernel	#
# and userland.  These features attempt to detect incorrect use of		#
# system primitives, and encourage loud failure through extra sanity		#
# checking and fail stop semantics.  They also substantially impact		#
# system performance.  If you want to do performance measurement,		#
# benchmarking, and optimization, you'll want to turn them off.  This		#
# includes various WITNESS- related kernel options, INVARIANTS, malloc		#
# debugging flags in userland, and various verbose features in the		#
# kernel.  Many developers choose to disable these features on build		#
# machines to maximize performance.  (To completely disable malloc		#
# debugging, define MALLOC_PRODUCTION in /etc/make.conf				#
#										#
# From /usr/src/UPDATING, #20200912:						#
#	The make.conf(5) MALLOC_PRODUCTION variable, used for disabling and	#
#	enabling assertions and statistics gathering in malloc(3), has been	#
#	migrated to a src.conf(5) WITH/WITHOUT_MALLOC_PRODUCTION option		#
#										#
#	On stable branches, WITH_MALLOC_PRODUCTION is set by default, which	#
#	means that malloc(3) has assertions and statistics gathering disabled,	#
#	for improved performance.						#
#										#
#     For backwards compatibility, the make.conf(5) MALLOC_PRODUCTION is still	#
#     honored, but it is now deprecated and undocumented.			#
#_______________________________________________________________________________#
WITH_MALLOC_PRODUCTION=		# Completely disable malloc debugging
WITH_OPENSSL_KTLS=		# Set to include kernel TLS support in OpenSSL
WITH_PIE=			# Build dynamically linked binaries as Position-Independent Executable
WITH_SORT_THREADS=		# Set to enable threads in sort(1)
#WITH_SVN=    			# Set to install svnlite(1) as svn(1) -- could be eliminated
WITH_USB_GADGET_EXAMPLES=


#===============================#
#  Remove features		#  ###
#===============================#

## Maybe a good idea but I think it causes something to be missing that boot needs.
#MODULES_OVERRIDE= acpi ahci amdtemp ata cardbus cbb cpufreq crypto ctl drm em evdev firmware iflib \
#kbdmux lpt md mmc mmcsd netmap nvd nvme pccard ppbus ppc puc re sdhci sound splash uinput ums usb
#module: wmt.ko
#module: uhid.ko
#module: ums.ko

WITHOUT_ACCT=			# Set to not build process accounting tools such as accton(8) and sa(8)
WITHOUT_AMD=			# Set to not build amd(8), and related programs. -- replaced by AUTOFS
WITHOUT_APM= 			# Set to not build apm(8), apmd(8) and related programs
WITHOUT_BOOTPD=			# Set to not build or install bootpd(8)
WITHOUT_CTM=			# source code mirror program
WITHOUT_CXGBETOOL=  		# Set to NOT build cxgbetool(8) for cxgbe - Chelsio T4-, T5-, and T6-based Ethernet adapter driver
WITHOUT_DEBUG_FILES=		# Set to avoid building or installing standalone debug files for each executable binary and shared library
WITHOUT_CLANG_EXTRAS=		# Set to build additional clang and llvm tools, such as bugpoint and clang-format
WITHOUT_FLOPPY=			# There is no floppy drive on the system
WITHOUT_FORTH=			# lua has replaced forth for the login menu mechanism
#WITHOUT_FREEBSD_UPDATE= 	# bastille uses this but otherwise unused on system
WITHOUT_GCC=
WITHOUT_GCC_BOOTSTRAP=
WITHOUT_GDB=
WITHOUT_GDB_LIBEXEC=
WITHOUT_GNU=
WITHOUT_GNU_DIFF=		# Set to not build GNU diff3(1)
WITHOUT_GNUCXX=	
WITHOUT_GSSAPI=			# Set to not build libgssapi
WITHOUT_GOOGLETEST=		# neither build nor install GoogleMock library, GoogleTest library, and dependent tests
WITHOUT_HAST=			# Set to not build hastd(8) and related utilities
WITHOUT_ISCSI=
WITHOUT_KERBEROS=
WITHOUT_KERBEROS_SUPPORT=
WITHOUT_LLVM_TARGET_ALL=
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# WITHOUT_LLVM_TARGET_ALL								#
# Set to only build the required LLVM target support.  This option is preferred		#
# to specific target support options.  When set, these options are also in effect:	#
#											#
# WITHOUT_LLVM_TARGET_AARCH64=								#
# WITHOUT_LLVM_TARGET_ARM=								#
# WITHOUT_LLVM_TARGET_MIPS=								#
# WITHOUT_LLVM_TARGET_POWERPC=								#
# WITHOUT_LLVM_TARGET_SPARC=								#
#  (unless WITH_LLVM_TARGET_ARM is set explicitly)					#
#_______________________________________________________________________________________#
#WITHOUT_LOCALES= 		# This leaves only very minimal C type locale and ports cry about it.
WITHOUT_MANCOMPRESS=
WITHOUT_MLX5TOOL=		# tool for management of the Connect-X4, 5 and 6 network adapters
WITHOUT_MODULE_DRM=		# Disable creation of old drm video modules
WITHOUT_MODULE_DRM2=		# Disable creation of old drm2 video modules
WITHOUT_NETGRAPH=		# build libraries, programs, and kernel modules without netgraph
WITHOUT_NETGRAPH_SUPPORT=	# do not add support to those items which might interface with netgraph
WITHOUT_OFED=			# Disable "OpenFabrics Enterprise Distribution" Infiniband software stack
WITHOUT_OPENSSH=		# Choosing openssh-portable from ports instead, seperately
WITHOUT_PORTSNAP=		# deprecated -- use svn (or better yet, git) instead
WITHOUT_RBOOTD=			# set to not build or install rbootd(8)
WITHOUT_RADIUS_SUPPORT=
WITHOUT_REPRODUCIBLE_BUILD=
WITHOUT_SENDMAIL=		# Set to not build sendmail(8) and related programs
WITHOUT_SVNLITE=		# Set to not build svnlite(1) and related programs
WITHOUT_SYSCONS=		# vt is default so this is not necessary
WITHOUT_TESTS=
WITHOUT_TESTS_SUPPORT=
WITHOUT_TIMED=
WITHOUT_WIRELESS=		# Build without wireless or wireless support added
WITHOUT_WIRELESS_SUPPORT=

#  ######################################################
#  # BUT have the below in make.conf			#
#  # Build ports against security/libressl		#
#  #  WITH_OPENSSL_PORT=	yes			#
#  #  OPENSSL_PORT=		security/libressl-devel	#
#  #  DEFAULT_VERSIONS+=ssl=libressl-devel		#
#  ######################################################

